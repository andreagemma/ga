"""
This type stub file was generated by pyright.
"""

import unittest
import psutil

class TestCodec(unittest.TestCase):
    def setUp(self): # -> None:
        ...
    
    def test_basic_codec(self): # -> None:
        ...
    
    def test_get_clib(self): # -> None:
        ...
    
    def test_all_compressors(self): # -> None:
        ...
    
    def test_all_filters(self): # -> None:
        ...
    
    def test_set_nthreads_exceptions(self): # -> None:
        ...
    
    def test_compress_input_types(self): # -> None:
        ...
    
    def test_decompress_input_types(self): # -> None:
        ...
    
    def test_decompress_ptr_input_types(self): # -> None:
        ...
    
    def test_decompress_releasegil(self): # -> None:
        ...
    
    def test_decompress_input_types_as_bytearray(self): # -> None:
        ...
    
    def test_compress_exceptions(self): # -> None:
        class LenMock:
            ...
        
        
    
    def test_compress_ptr_exceptions(self): # -> None:
        ...
    
    def test_decompress_exceptions(self): # -> None:
        ...
    
    def test_decompress_ptr_exceptions(self): # -> None:
        ...
    
    @unittest.skipIf(not has_numpy, "Numpy not available")
    def test_pack_array_exceptions(self): # -> None:
        ...
    
    def test_unpack_array_with_unicode_characters(self): # -> None:
        ...
    
    def test_unpack_array_with_from_py27_exceptions(self): # -> None:
        ...
    
    def test_unpack_array_with_unicode_characters_from_py27(self): # -> None:
        ...
    
    def test_unpack_array_exceptions(self): # -> None:
        ...
    
    @unittest.skipIf(not psutil, "psutil not available, cannot test for leaks")
    def test_no_leaks(self): # -> None:
        ...
    
    def test_get_blocksize(self): # -> None:
        ...
    
    def test_get_cbuffer_sizes(self): # -> None:
        ...
    
    def test_bitshuffle_not_multiple(self): # -> None:
        ...
    
    def test_cbuffer_validate(self): # -> None:
        ...
    
    def test_cbuffer_validate_failures(self): # -> None:
        ...
    
    def test_bithuffle_leftovers(self): # -> None:
        ...
    


def run(verbosity=...): # -> None:
    ...

if __name__ == '__main__':
    ...
